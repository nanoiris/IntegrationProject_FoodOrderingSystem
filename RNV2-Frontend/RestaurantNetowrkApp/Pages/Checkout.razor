@page "/Order/Checkout/{orderId}"
@using Services;
@using Data.Dto;
@using Data.model;
@using RestaurantDaoBase.Models;
@inject Data.SessionStorageAccessor sessionStorageAccessor;
@inject OrderService orderService;
@inject UserService userService;
@inject DeliveryService deliveryService;
@inject RestService restService;
@inject IJSRuntime JSRuntime;
@inject NavigationManager navigationManager

<div class="osahan-payment">
    <div class="p-3 osahan-inner-header bg-white shadow-sm">
        <a class="font-weight-bold text-dark text-back text-decoration-none " href="Order/Review/@orderId">
            <i class="feather-chevron-left"></i>
            <span class="ml-3 h6 mb-0">Checkout</span>
        </a>
    </div>

    <div class="py-3 osahan-cart-item">
        <div class="osahan-cart-item-profile bg-white shadow p-3">
            <div class="d-flex flex-column">
                <h6 class="mb-2 font-weight-bold">DELIVERY ADDRESS</h6>
                <div class="custom-control custom-radio mb-2 px-0">
                    <input type="radio" id="customRadio1" name="customRadio" class="custom-control-input" 
                    @onclick ="()=> useHomeAddress()" />
                    <label class="custom-control-label border osahan-check p-3 w-100 rounded border-primary"
                           for="customRadio1">
                        <b><i class="feather-home mr-2"></i> Home</b> <br>
                        @if(user != null)
                        {
                            <p class="small mb-0 pl-4">@user.Street, @user.City</p>
                        }
                    </label>
                </div>
                <a class="btn btn-primary" href="#" data-toggle="modal" data-target="#exampleModal">
                    ADD NEW ADDRESS
                </a>
            </div>
        </div>
    </div>
    <div class="py-3 osahan-cart-item" hidden ="@hidePickupDiv">
        <div class="osahan-cart-item-profile bg-white shadow p-3">
            <div class="d-flex flex-column">
                <h6 class="mb-2 font-weight-bold">PICKUP TIME</h6>
                <div class="custom-control custom-radio mb-2 px-0">
                    <input type="datetime-local" class="form-control" id="pickupTime" name="pickupTime" asp-for="pickupTime" value='@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")'>
                </div>
            </div>
        </div>
    </div>
    <div class="accordion pb-3" id="accordionExample">
        <div class="osahan-card bg-white overflow-hidden  mb-2">
            <div class="osahan-card-header" id="headingOne">
                <h2 class="mb-0">
                    <button class="d-flex p-3 align-items-center btn btn-link w-100" type="button"
                            data-toggle="collapse" data-target="#collapseOne" aria-expanded="true"
                            aria-controls="collapseOne">
                        <i class="feather-credit-card mr-3"></i> Credit/Debit Card
                        <i class="feather-chevron-down ml-auto"></i>
                    </button>
                </h2>
            </div>
            <div id="collapseOne" class="collapse show" aria-labelledby="headingOne"
                 data-parent="#accordionExample">
                <div class="osahan-card-body border-top p-3">
                    <EditForm id="payCardForm" Model="@cardInfo" OnValidSubmit="checkout">
                        <div class="form-row">
                            <div class="col-md-12 form-group">
                                <label class="form-label mb-1 small">Card number</label>
                                <div class="input-group">
                                    <input @bind-value="cardInfo.CardNumber" type="number" class="form-control">
                                    <div class="input-group-append">
                                        <button id="button-addon2" type="button"
                                                class="btn btn-outline-secondary">
                                            <i class="feather-credit-card"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8 form-group">
                                <label class="form-label mb-1 small">
                                    Valid through(MM/YY)
                                </label>
                                <input @bind-value="cardInfo.ValidThrough" placeholder="Enter Valid through(MM/YY)" type="text" class="form-control">
                            </div>
                            <div class="col-md-4 form-group">
                                <label class="form-label mb-1 small">CVV</label>
                                <input @bind-value = "cardInfo.Cvv" type="text" class="form-control">
                            </div>
                            <div class="col-md-12 form-group">
                                <label class="form-label mb-1 small">
                                    Name on card
                                </label>
                                <input @bind-value = "cardInfo.Name" type="text" class="form-control">
                            </div>
                            <div class="col-md-12 form-group mb-5">
@*                                <div class="custom-control custom-checkbox">
                                    <input type="checkbox"
                                           id="custom-checkbox1" class="custom-control-input">
                                    <label title=""  type="checkbox" for="custom-checkbox1"  class="custom-control-label small pt-1">
                                        Securely save this card for a faster
                                        checkout next time.
                                    </label>
                                </div>*@
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
    @if(order != null)
    {
        <div class="fixed-bottom p-3">
            <button class="btn btn-success btn-lg btn-block" type="submit" form="payCardForm">
                PAY $@String.Format("{0:0.00}",order.PayTotal)<i class="feather-arrow-right"></i>
            </button>
        </div> 
    }
    

    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header align-items-center">
                    <h5 class="modal-title" id="exampleModalLabel">Add Delivery Address</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <i class="feather-x float-right"></i>
                    </button>
                </div>
                <div class="modal-body">
                    <EditForm class="" Model="@address">
                        <div class="form-row">
                            <div class="col-md-12 form-group">
                                <label class="form-label">Street</label>
                                <input @bind-value = "address.Street" type="text" class="form-control">
                            </div>
                            <div class="col-md-12 form-group">
                                <label class="form-label">City</label>
                                <input @bind-value="address.City" type="text" class="form-control">
                            </div>
                            <div class="col-md-12 form-group">
                                <label class="form-label">Province</label>
                                <input  @bind-value="address.City" type="text" class="form-control">
                            </div>
                            <div class="col-md-12 form-group">
                                <label class="form-label">Country</label>
                                <input @bind-value="address.Country" type="text" class="form-control">
                            </div>
                            <div class="col-md-12 form-group">
                                <label class="form-label">Postal Code</label>
                                <input @bind-value="address.PostalCode" type="text" class="form-control">
                            </div>
                        </div>
                    </EditForm>
                </div>
                <div class="modal-footer p-0 border-0 p-3">
                    <div class="col-6 m-0 pl-0 pr-1">
                        <button @onclick = "setAddress" type="button" class="btn border btn-lg btn-block" data-dismiss="modal">
                            Close
                        </button>
                    </div>
                    <div class="col-6 m-0 pr-0 pl-1">
                        <button type="button" class="btn btn-primary btn-lg btn-block">Save changes</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string orderId{ get; set; }
    private OrderDto order;
    private UserModel user;
    private bool hidePickupDiv = false;
    private CardInfo cardInfo = new CardInfo();
    private Address address = new Address();



    protected override async Task OnInitializedAsync()
    {
        string userEmail = await sessionStorageAccessor.GetValueAsync<string>("userEmail");
        user = userService.getUserByEmail(userEmail);
        order = orderService.getOrderById(orderId);
    }
    //user user's home address
    private void useHomeAddress()
    {
        address = new Address
            {
                Street = user.Street,
                City = user.City,
                State = user.State,
                PostalCode = user.PostCode,
                Country = user.Country
            };
        order.IsDelivery = true;
        hidePickupDiv = true;
    }

    //use input address
    private void setAddress()
    {
        order.IsDelivery = true;
        hidePickupDiv = true;
    }

    private async Task checkout()
    {
        //stripe payment
        var response = await orderService.pay(order, cardInfo, user.UserName);
        if (response != "Success")
        {
            return;
        }

        //change order status to paid
        var result = await orderService.changeOrderStatus(orderId, 1);
        if (!result) return;

        //add payment info to order
        result =  await orderService.payment(orderId, cardInfo);
        if (!result) return;

        //if choose to delivery, create a new delivery,then set order isDelivery to true
        if (order.IsDelivery)
        {
            RestaurantDto rest = restService.GetRestById(order.RestaurantId);

            result = await deliveryService.createDelivery(order, rest, address);
            if (!result) return;

            result = await orderService.setOrderDelivery(orderId);
             if (!result) return;
        }
        
        string msg = "Payment succeed!";
        navigationManager.NavigateTo($"/Order/Details/{order.Id}/{msg}");

    }

}
