@page "/"
@page "/{msg}"

@using RestaurantNetowrkApp.Componants
@inject IJSRuntime JSRuntime
@using Data.Dto
@using RestaurantNetowrkApp.Services;
@using System.Net.Http;
@using System.Net.Http.Json;
@using Serilog;

<div class="osahan-home-page">
    <div class="shadow p-3 homepage-osahan-header bg-white">
        <div class="title d-flex align-items-center "> 
          
            <div class="input-group border osahan-search mt-3 rounded-lg shadow-sm overflow-hidden">               
                <div class="input-group-prepend">
                    <button class="border-0 btn btn-outline-secondary text-primary bg-white btn-block">
                        <i class="feather-search"></i>
                    </button>
                </div>
                <input type="text" class="shadow-none border-0 form-control pl-0"
                       placeholder="Search for restaurants or dishes" aria-label="" aria-describedby="basic-addon1">
            </div>
            <div class="ml-auto d-flex align-items-center">
                <a class="text-dark mx-2 fs-18 top-nav-btn-cart position-relative" data-toggle="modal"
                   data-target="#exampleModal" href="#"><i class="feather-filter"></i></a>
            </div> 
            <DropDownMenu showMsg="showMsg" />
        </div>
    </div>

    @if (msg != null)
    {
        <p class="py-2 pl-2 bg-warning">@msg</p>
    }

    <div class="osahan-main">

        <div class="cat-slider border-bottom">
            @foreach (var category in restCategories)
            {
                <div class="cat-item px-1 py-3">
                    <a class="d-block text-center" href="">
                        <img src="@(Data.Constants.imgUrl +category.Logo)" class="img-fluid mb-2 shadow">
                        <p class="m-0 small">@category.Name</p>
                    </a>
                </div>
            }

        </div>

        <div class="px-3 pt-3 title d-flex align-items-center">
            <h6 class="m-0 font-weight-bold">Trending this week</h6>
            <a class="font-weight-bold ml-auto" href="/Restaurant/Trending">
                View all <i class="feather-chevrons-right"></i>
            </a>
        </div>

        <div id="trending-slider">
            @foreach(var restaurant in trendingRests)
            {
                <div class="osahan-slider-item py-3 px-1">
                     <RestaurantCard Rest="@restaurant"/>
                </div>
            }
            
        </div>

        <div class="px-3 pt-4 pb-3 title d-flex align-items-center">
            <h6 class="m-0 font-weight-bold">Most popular</h6>
            <a class="font-weight-bold ml-auto" href="/Restaurant/ListAll">
                View all <i class="feather-chevrons-right"></i>
            </a>
        </div>

        <div class="most_popular px-3 pb-5">
            <div class="row">
                @foreach(var rest in first2Rests)
                {
                    <div class="col-6 col-sm-4 pr-1">
                        <RestaurantCard Rest="@rest" />
                    </div>
                }
               
            </div>
        </div>
        <div class="py-3">
            <p>  </p>
        </div>
       
    </div>
</div>
<RestaurantFilter restCategories="@restCategories" />
<NavMenuFooter />

@code {
    [Parameter]
    public string msg{ get; set; }
    //bool firstRender = true;

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (restCategories.Count != 0 && trendingRests.Count !=0 )
        {
            await JSRuntime.InvokeAsync<object>("homeSlick");
            //firstRender = false;
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private List<RestCategoryDto> restCategories = new List<RestCategoryDto>();
    private List<RestaurantDto> trendingRests = new List<RestaurantDto>();
    private List<RestaurantDto> first2Rests = new List<RestaurantDto>();

    private HttpClient httpClient = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        Log.Debug("render start");
        httpClient.BaseAddress = new Uri(Data.Constants.RestUri);

        restCategories = (await httpClient.GetFromJsonAsync<List<RestCategoryDto>>($"api/restcategory/list")).ToList();  
        trendingRests = (await httpClient.GetFromJsonAsync<List<RestaurantDto>>($"api/restaurant/listweeklytrends")).ToList();
        first2Rests = (await httpClient.GetFromJsonAsync<List<RestaurantDto>>($"api/restaurant/listwithlimit/2")).ToList();
    }

    void showMsg(string msgStr)
    {
        msg = msgStr;
    }
}
