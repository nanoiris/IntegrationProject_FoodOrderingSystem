@using Data.Dto
@inject Data.SessionStorageAccessor SessionStorageAccessor;
@inject NavigationManager NavigationManager;

@if (Rest != null)
{
    <div class="list-card bg-white h-100 rounded overflow-hidden position-relative shadow-sm">
    <div class="list-card-image">
        <div class="star position-absolute">
            <span class="badge badge-success">
                <i class="feather-star"></i> 
            </span>
        </div>
        <a @onclick="()=>goToRest(Rest.Id)">
                <img src="@(Data.Constants.imgUrl+Rest.Logo)" class="img-fluid item-img w-100">
        </a>
    </div>
    <div class="p-3 position-relative">
        <div class="list-card-body">
            <h6 class="mb-1">
                    <a @onclick="()=>goToRest(Rest.Id)" class="text-black">
                    @Rest.Name
                </a>
            </h6>
            <p class="text-gray mb-1 small">@Rest.Description</p>
            <p class="text-gray mb-1 rating">
          @*      <RatingStars />*@
            </p>
        </div>
    </div>
</div>
}


@code {
    [Parameter]
    public RestaurantDto Rest { get; set; }

    private async Task goToRest(string restId)
    {
        string userEmail = await SessionStorageAccessor.GetValueAsync<string>("userEmail");
        if (userEmail == null)
        {
            string msg = "Please login to make an order";
            NavigationManager.NavigateTo($"/Account/Login/{msg}");
        }
        else
        {
            NavigationManager.NavigateTo($"/Restaurant/{Rest.Id}");
        }
    }
}
