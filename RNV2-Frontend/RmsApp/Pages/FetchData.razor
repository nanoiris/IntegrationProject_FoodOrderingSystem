@page "/fetchdata"
@using RmsApp.Pages
@inject HttpClient Http

<PageTitle>Example CRUD</PageTitle>

<h1>Example CRUD</h1>

<ul class="breadcrumb breadcrumb-gray">
    @foreach (var path in Paths)
    {
             <li class="breadcrumb-item"><NavLink href="@path.Path">@path.Title</NavLink></li>
    }
</ul>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row pb-3">
            <div class="col-2">
                <a class="btn btn-icon-only btn-pill btn-primary" ><i class="fa fa-plus"></i></a>
            </div>
        </div>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
                <th>Edit</th>
                 <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                     <td><a class="btn btn-icon-only btn-pill btn-primary" ><i class="fa fa-pen"></i></a></td>
                    <td><a class="btn btn-icon-only btn-pill btn-primary" ><i class="fa fa-trash"></i></a></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public List<TabPath> Paths = new List<TabPath>
        {
        new TabPath { Title = "Home", Path = "/" },
        new TabPath { Title = "Example CRUD", Path = "/fetchdata" },
        };

        public WeatherForecast[]? forecasts;

        protected override async Task OnInitializedAsync()
        {
            forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("mock/weather.json");
        }

        public class WeatherForecast
        {
            public DateOnly Date { get; set; }

            public int TemperatureC { get; set; }

            public string? Summary { get; set; }

            public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
        }
}
