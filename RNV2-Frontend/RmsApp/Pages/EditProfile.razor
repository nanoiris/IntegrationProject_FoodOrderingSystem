@* @page "/edit/{id}" *@
@page "/edit"

@inject HttpClient Http
@inject NavigationManager NavigationManager
@using RmsApp.Services
@using RmsApp.Dtos
@inject IFlashMessageService FlashMessageService



<PageTitle>Edit Profile</PageTitle>

@if (restaurant != null)
{
    <h2>@restaurant.Name</h2>
    <form Model="restaurant" @onsubmit="UpdateRestaurant">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label>Name</label>
                    <InputText class="form-control" @bind-Value="restaurant.Name" />
                </div>
                <div class="form-group mb-3">
                    <label>Description</label>
                    <InputText class="form-control" @bind-Value="restaurant.Description" />
                </div>
                <div class="form-group mb-3">
                    <label>Phone Number</label>
                    <InputText class="form-control" @bind-Value="restaurant.PhoneNo" />
                </div>
                <div class="form-group mb-3">
                    <label>Email</label>
                    <InputText class="form-control" @bind-Value="restaurant.Email" />
                </div>
                 <div class="form-group mb-3">
                    <label>Restaurant Cover Logo</label>
                    <InputFile OnChange="OnFileChange" />
                      <img src="@(restaurant.Logo != null ? $"/img/{restaurant.Logo}" : null)" width="100px" height="100px"/>
                </div>
            </div>
            <div class="col-md-6">
                  @if (restaurant.Address != null)
                {
                    <div class="form-group mb-3">
                        <label>Address</label>
                    <div>
                        <div class="form-group mb-3">
                            <label>Street</label>
                            <InputText class="form-control" @bind-Value="restaurant.Address.Street" />
                        </div>
                        <div class="form-group mb-3">
                            <label>City</label>
                            <InputText class="form-control" @bind-Value="restaurant.Address.City" />
                        </div>
                        <div class="form-group mb-3">
                            <label>State</label>
                            <InputText class="form-control" @bind-Value="restaurant.Address.State" />
                        </div>
                        <div class="form-group mb-3">
                            <label>Postal Code</label>
                            <InputText class="form-control" @bind-Value="restaurant.Address.PostalCode" />
                        </div>
                        <div class="form-group mb-3">
                            <label>Country</label>
                            <InputText class="form-control" @bind-Value="restaurant.Address.Country" />
                        </div>
                    </div>
                </div> 
                }
                @* <div class="form-group">
                    <label>Category</label>
                    <InputSelect class="form-control" @bind-Value="restaurant.CategoryId">
                        @foreach (var category in categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </InputSelect>
                </div> *@
                <button type="submit" class="btn btn-primary">Save Changes</button>
            </div>
        </div>
    </form>
}
else
{
    <p>No Restaurant Data</p>
}

@code {
    @* [Parameter]
    public string id { get; set; } *@
    private RestaurantDto restaurant;
    
    [Inject]
    public IRestaurantService RestaurantService { get; set; }

     private IBrowserFile UploadImg { get; set; }

     private async Task OnFileChange(InputFileChangeEventArgs e)
    {
        UploadImg = e.File;
    }

    protected override async Task OnInitializedAsync()
    {
        string id = Constants.RestaurantId; 
        restaurant = await RestaurantService.GetOneRestaurantAsync(id);
    }

    private async Task UpdateRestaurant()
    {
        var newRestaurant = new RestaurantDto
        { 
            Id = restaurant.Id,
            Name = restaurant.Name,
            Email = restaurant.Email,
            Description = restaurant.Description,
            PhoneNo = restaurant.PhoneNo,
            CategoryId = restaurant.CategoryId,
            Address = restaurant.Address, 
            UploadImg = UploadImg
        }; 
        
        if (UploadImg != null)
        {
            var imgContent = new StreamContent(UploadImg.OpenReadStream());
            imgContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(UploadImg.ContentType);
        }
    
        await RestaurantService.UpdateRestaurantAsync(newRestaurant);
        
        FlashMessageService.SuccessMessage = "updated restaurant successfully.";
        FlashMessageService.DurationInSeconds = 5;
        await FlashMessageService.ClearMessagesAsync();
        @* NavigationManager.NavigateTo("/item"); *@
    }


    }