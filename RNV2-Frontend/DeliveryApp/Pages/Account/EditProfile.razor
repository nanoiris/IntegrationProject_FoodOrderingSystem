@page "/Account/EditProfile"
@page "/Account/EditProfile/{msg}"
@using DeliveryApp.Services
@using DeliveryApp.Data
@using DeliveryApp.Data.Model
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.Net.Http.Headers;
@using Serilog;
@using Microsoft.AspNetCore.Http;
@inject AuthService authService
@inject IJSRuntime JSRuntime;
@inject NavigationManager NavigationManager

<div class="p-4 login-page-form">
    @if (msg != null)
    {
        <p class="py-2 pl-2 bg-warning">@msg</p>
    }
<a class="font-weight-bold text-back text-decoration-none d-flex" href="Account/Profile">
        <i class="feather-chevron-left"></i>
        <span class="pl-2">Back</span>
    </a>
    <div class="bg-white shadow">
        <div class="d-flex align-items-center border-bottom p-3">
            <div class="left mr-3">
                <img src=" @(Data.Constants.imgUrl+user.Logo)" class="rounded-circle" height="50px">
            </div>
            <div class="right">
                <h6 class="mb-1 font-weight-bold">
                    @user.Name <i class="feather-check-circle text-success"></i>
                </h6>
                <p class="text-muted m-0 small">@user.Email</p>
            </div>
        </div>
    </div>
    <h6 class="mb-1 font-weight-bold">Edit your profile</h6> 
    <EditForm class="mt-4 " id="signupForm" Model="@user" OnValidSubmit="EditProfilePut" enctype="multipart/form-data">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label class="text-info pl-2 mt-1 mb-0">Email:</label>
            <input @bind-value="user.UserName" type="text" class="form-control" id="Email" readonly />
        </div>
        <div class="form-group">
            <label class="text-info pl-2 mt-1 mb-0">Name:</label>
            <input @bind-value="user.Name" type="text" class="form-control" id="Name" />
            <ValidationMessage For="@(() => user.Name)" />
        </div>
        <div class="form-group">
            <label class="text-info pl-2 mt-1 mb-0">Mobile Number:</label>
            <input @bind-value="user.PhoneNumber" type="text" class="form-control" id="PhoneNumber" />
            <ValidationMessage For="@(() => user.PhoneNumber)" />
        </div>
        <div class="form-group">
            <label class="text-info pl-2 mt-1 mb-0">Street:</label>
            <input @bind-value="user.Street" type="text" class="form-control" id="Street" />
            <ValidationMessage For="@(() => user.Street)" />
        </div>
        <div class="form-group">
            <label class="text-info pl-2 mt-1 mb-0">City:</label>
            <input @bind-value="user.City" type="text" class="form-control" id="City" />
            <ValidationMessage For="@(() => user.City)" />
        </div>
        <div class="form-group">
            <label class="text-info pl-2 mt-1 mb-0">Province:</label>
            <input @bind-value="user.State" type="text" class="form-control" id="State" />
            <ValidationMessage For="@(() => user.State)" />
        </div>
        <div class="form-group">
            <label class="text-info pl-2 mt-1 mb-0">Country:</label>
            <input @bind-value="user.Country" type="text" class="form-control" id="Country" />
            <ValidationMessage For="@(() => user.Country)" />
        </div>
        <div class="form-group">
            <label class="text-info pl-2 mt-1 mb-0">Zip:</label>
            <input @bind-value="user.PostCode" type="text" class="form-control" id="PostCode" />
            <ValidationMessage For="@(() => user.PostCode)" />
        </div>

        <div class="form-group">
            <label class="text-info pl-2 mt-1 mb-0">Image:</label>
            <div class="custom-file">
                <InputFile class="form-control" OnChange="@onFileChange" @ref="inputFile" />
            </div>
        </div>

        <div class="mx-5 mb-3">
            <img src="@(Data.Constants.imgUrl + user.Logo)" class="w-50" @ref="previewImageElem"/>
        </div>

        <button class="btn btn-primary btn-lg btn-block mb-2" type="submit">Update</button>

    </EditForm>
       
</div>
@code {
    [Parameter]
    public string msg { get; set; }

    public string deliveryman { get; set; }
    public string logo { get; set; }
    //public HttpClient ;
    private UserModel user = new UserModel();
    private InputFile? inputFile;
    private ElementReference previewImageElem;

    protected override async Task OnInitializedAsync()
    {

        deliveryman = AuthService.User.UserName;
        user = await authService.getUserByEmail(deliveryman);
        logo = await Utils.BuildLogoPath(user.Logo);        
    }

    private async Task EditProfilePut()
    {
        var response = await authService.Update(user);

        if (response)
        {
            string msg = "Update Profile succeed!";
            NavigationManager.NavigateTo($"/Account/Profile/{msg}");
        }
        else
        {
            string msg = "Update Profile failed.Please try again";
            NavigationManager.NavigateTo($"/Account/EditProfile/{msg}");
        }
    }

    private async Task onFileChange(InputFileChangeEventArgs e)
    {
        user.UploadImg =e.File;
        await JSRuntime.InvokeVoidAsync("previewImage", inputFile!.Element, previewImageElem);

    }

}

