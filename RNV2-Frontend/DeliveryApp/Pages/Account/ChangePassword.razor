@page "/Account/ChangePassword"
@page "/Account/ChangePassword/{msg}"
@using DeliveryApp.Services
@using DeliveryApp.Data
@using DeliveryApp.Data.Dto
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.Net.Http.Headers;
@using Serilog;
@using Microsoft.AspNetCore.Http;
@inject AuthService authService
@inject Utils utils
@inject NavigationManager NavigationManager

<div class="p-4 login-page-form">
    @if (msg != null)
    {
        <p class="py-2 pl-2 bg-warning">@msg</p>
    }
<a class="font-weight-bold text-back text-decoration-none d-flex" href="Account/Profile">
        <i class="feather-chevron-left"></i>
        <span class="pl-2">Back</span>
    </a>
    <div class="bg-white shadow">
        <div class="d-flex align-items-center border-bottom p-3">
            <div class="left mr-3">
                <img src="@logo" class="rounded-circle" height="50px">
            </div>
            <div class="right">
                <h6 class="mb-1 font-weight-bold">
                    @user.Name <i class="feather-check-circle text-success"></i>
                </h6>
                <p class="text-muted m-0 small">@user.Email</p>
            </div>
        </div>
    </div>
    <h6 class="mb-1 font-weight-bold">Change your password</h6> 
    <EditForm class="mt-4 " id="signupForm" Model="@user" OnValidSubmit="ChangePasswordPut" enctype="multipart/form-data">
        <DataAnnotationsValidator />
        <div class="form-group">
            <input @bind-value="user.Email" type="text" placeholder="Email" class="form-control" id="Email" />
            <ValidationMessage For="@(() => user.Email)" />
        </div>
         <div class="form-group">
            <input @bind-value="user.Password" type="password" placeholder="Password" class="form-control" id="Password" />
            <ValidationMessage For="@(() => user.Password)" />
        </div>
        <div class="form-group">
            <input @bind-value="user.ConfirmPassword" type="password" placeholder="Retype Password" class="form-control" id="ConformPassword" />
            <ValidationMessage For="@(() => user.ConfirmPassword)" />
        </div>

        <button class="btn btn-primary btn-lg btn-block mb-2" type="submit" >Update</button>
       
    </EditForm>
      
</div>
@code {
    [Parameter]
    public string msg { get; set; }

    public string deliveryman { get; set; }
    public string logo { get; set; }
    public HttpClient httpClient = new HttpClient();
    private RegisterUser user = new RegisterUser();

    protected override async Task OnInitializedAsync()
    {
        httpClient.BaseAddress = new Uri(Constants.IdentityUri);
        deliveryman = AuthService.User.UserName;
        user = await httpClient.GetFromJsonAsync<RegisterUser>($"api/Ossuser/OneByEmail/" + deliveryman);
        if (user.Logo != null)
        {
            logo = Utils.BuildLogoPath(user.Logo);
        }
    }

    private async Task ChangePasswordPut()
    {
        var multipartContent = new MultipartFormDataContent();
        multipartContent.Add(new StringContent(user.Email), "Email");
        multipartContent.Add(new StringContent(user.Password), "Password");
        multipartContent.Add(new StringContent(user.ConfirmPassword), "ConfirmPassword");

        //httpClient.BaseAddress = new Uri(Constants.IdentityUri);        
        HttpResponseMessage response = await httpClient.PutAsync("http://localhost:5191/api/User/ResetPassword", multipartContent);

        if (response.IsSuccessStatusCode)
        {
            string msg = "Update Password succeed!";
            NavigationManager.NavigateTo($"/Account/Profile/{msg}");
        }
        else
        {
            string msg = "Update Password failed.Please try again";
            NavigationManager.NavigateTo($"/Account/ChangePassword/{msg}");
        }
    }

}


