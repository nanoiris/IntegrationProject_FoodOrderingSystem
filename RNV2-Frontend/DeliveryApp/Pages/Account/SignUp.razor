@page "/Account/Signup"
@using DeliveryApp.Data.Dto;
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.Net.Http.Headers;
@using Serilog;
@using Microsoft.AspNetCore.Http;
@inject NavigationManager NavigationManager


<div class="p-4 login-page-form">
    <a class="font-weight-bold text-back text-decoration-none d-flex" href="">
        <i class="feather-chevron-left"></i>
        <span class="pl-2">Back</span>
    </a>
    <h2 class="mb-0 mt-2">Hello There.</h2>
    <p class="text-50">Sign up to continue</p>
    <EditForm class="mt-4 " id="signupForm" Model="@user" OnValidSubmit="SignupPost" enctype="multipart/form-data">
        <DataAnnotationsValidator />
        <div class="form-group">
            <input @bind-value="user.Name" type="text" placeholder="Name" class="form-control" id="Name" />
            <ValidationMessage For="@(() => user.Name)" />
        </div>
        <div class="form-group">
            <input @bind-value="user.Email" type="text" placeholder="Email" class="form-control" id="Email" />
            <ValidationMessage For="@(() => user.Email)" />
        </div>
        <div class="form-group">
            <input @bind-value="user.PhoneNumber" type="text" placeholder="Mobile Number" class="form-control" id="Phone" />
            <ValidationMessage For="@(() => user.PhoneNumber)" />
        </div>
        <div class="form-group">
            <input @bind-value="user.Password" type="password" placeholder="Password" class="form-control" id="Password" />
            <ValidationMessage For="@(() => user.Password)" />
        </div>
        <div class="form-group">
            <input @bind-value="user.ConfirmPassword" type="password" placeholder="Retype Password" class="form-control" id="ConformPassword" />
            <ValidationMessage For="@(() => user.ConfirmPassword)" />
        </div>
        <div class="form-group">
            <input @bind-value="user.Street" type="text" placeholder="Street" class="form-control" id="Street" />
            <ValidationMessage For="@(() => user.Street)" />
        </div>
        <div class="form-group">
            <input @bind-value="user.City" type="text" placeholder="City" class="form-control" id="City" />
            <ValidationMessage For="@(() => user.City)" />
        </div>
        <div class="form-group">
            <input @bind-value="user.State" type="text" placeholder="Province" class="form-control" id="Province" />
            <ValidationMessage For="@(() => user.State)" />
        </div>
        <div class="form-group">
            <input @bind-value="user.Country" type="text" placeholder="Country" class="form-control" id="Country" />
            <ValidationMessage For="@(() => user.Country)" />
        </div>
        <div class="form-group">
            <input @bind-value="user.PostCode" type="text" placeholder="Zip" class="form-control" id="Zip" />
            <ValidationMessage For="@(() => user.PostCode)" />
        </div>
        <div class="form-group mr-3 ">
            <div class="custom-file  mr-3">
                <InputFile class="form-control" OnChange="@onFileChange" />
            </div>
        </div>

        <button class="btn btn-primary btn-lg btn-block mb-2" type="submit">SIGN UP</button>
        <div class="d-flex align-items-center justify-content-center">
            <a href="/Account/Login">
                <p class="text-center m-0">Already an account? Log in</p>
            </a>
        </div>
    </EditForm>
</div>

@code {
    public RegisterUser user = new RegisterUser();
    private HttpClient httpClient = new HttpClient();

    private async Task SignupPost()
    {
        var multipartContent = new MultipartFormDataContent();
        multipartContent.Add(new StringContent(user.Name), "Name");
        multipartContent.Add(new StringContent(user.Email), "Email");
        multipartContent.Add(new StringContent(user.Password), "Password");
        multipartContent.Add(new StringContent(user.ConfirmPassword), "ConfirmPassword");
        multipartContent.Add(new StringContent(user.PhoneNumber), "PhoneNumber");
        multipartContent.Add(new StringContent("DeliveryMan"), "Role");

        var img = new StreamContent(user.UploadImg?.OpenReadStream());
        Log.Debug(user.UploadImg.Name);
        Log.Debug(user.UploadImg.ContentType);
        img.Headers.ContentType = new MediaTypeHeaderValue(user.UploadImg.ContentType);
        multipartContent.Add(content: img, "UploadImg", fileName: user.UploadImg.Name);

        HttpResponseMessage response = await httpClient.PostAsync("http://localhost:5191/api/auth/register", multipartContent);

        if (response.IsSuccessStatusCode)
        {
            string msg = "Register succeed! Please Login";
            NavigationManager.NavigateTo($"/Account/Login/{msg}");
        }
        else
        {

        }

    }

    private async void onFileChange(InputFileChangeEventArgs e)
    {
        user.UploadImg = e.File;

    }
}
